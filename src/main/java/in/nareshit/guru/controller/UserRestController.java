package in.nareshit.guru.controller;

import java.security.Principal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import in.nareshit.guru.model.User;
import in.nareshit.guru.model.UserRequest;
import in.nareshit.guru.model.UserResponse;
import in.nareshit.guru.service.IUserService;
import in.nareshit.guru.util.JwtUtil;

@RestController
@RequestMapping("/user")
public class UserRestController {
	@Autowired
	private IUserService service; //Has-a
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private JwtUtil jwtUtil;
	
	//Save user data in Database
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(@RequestBody User user){
		
		Integer id=service.saveUser(user);
		String body="User '"+id+" ' saved";
		return ResponseEntity.ok(body) ;
		
		
	}
	
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest userRequest) {
		//validate Username/password with database
		//if it is valid JWTToken is genarated or else  InvaildUserAuthenticationEntryPoint is trigger
		authenticationManager.authenticate(
				new UsernamePasswordAuthenticationToken(userRequest.getUsername(), userRequest.getPassword()));
		String token = jwtUtil.generateToken(userRequest.getUsername());
		return ResponseEntity.ok(new UserResponse(token, "GENERATED BY MR.RAGHU-NIT"));

	}
	
	//after login only
	
	@PostMapping("/welcome")
	public ResponseEntity<String> accessUserData(Principal p) {
		return ResponseEntity.ok("Hello user:" + p.getName());
	}
}
